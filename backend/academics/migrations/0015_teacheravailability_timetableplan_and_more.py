# Generated by Django 5.2.6 on 2025-10-02 00:30

import datetime
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('academics', '0014_subjectcomponent_alter_examresult_unique_together_and_more'),
        ('accounts', '0008_state_add_user_school'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='TeacherAvailability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.IntegerField(choices=[(1, 'Monday'), (2, 'Tuesday'), (3, 'Wednesday'), (4, 'Thursday'), (5, 'Friday'), (6, 'Saturday'), (7, 'Sunday')])),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('is_available', models.BooleanField(default=True)),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['teacher', 'day_of_week', 'start_time'],
            },
        ),
        migrations.CreateModel(
            name='TimetablePlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('status', models.CharField(default='draft', max_length=20)),
                ('notes', models.CharField(blank=True, max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='timetable_plans', to='accounts.school')),
                ('term', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='timetable_plans', to='academics.term')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TimetableClassConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active_days_override', models.JSONField(blank=True, null=True)),
                ('period_minutes_override', models.IntegerField(blank=True, null=True)),
                ('klass', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academics.class')),
                ('room_preference', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='academics.room')),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='class_configs', to='academics.timetableplan')),
            ],
        ),
        migrations.CreateModel(
            name='ClassSubjectQuota',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weekly_periods', models.IntegerField()),
                ('min_gap_periods', models.IntegerField(default=0)),
                ('klass', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academics.class')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academics.subject')),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subject_quotas', to='academics.timetableplan')),
            ],
        ),
        migrations.AddField(
            model_name='timetableentry',
            name='plan',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='entries', to='academics.timetableplan'),
        ),
        migrations.CreateModel(
            name='TimetableTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('default_period_minutes', models.IntegerField(default=40)),
                ('start_of_day', models.TimeField(default=datetime.time(8, 0))),
                ('days_active', models.JSONField(default=list)),
                ('is_default', models.BooleanField(default=False)),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='timetable_templates', to='accounts.school')),
            ],
            options={
                'ordering': ['school', 'name'],
            },
        ),
        migrations.AddField(
            model_name='timetableplan',
            name='template',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='plans', to='academics.timetabletemplate'),
        ),
        migrations.CreateModel(
            name='PeriodSlotTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period_index', models.IntegerField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('kind', models.CharField(choices=[('lesson', 'Lesson'), ('break', 'Break'), ('lunch', 'Lunch')], default='lesson', max_length=10)),
                ('label', models.CharField(blank=True, max_length=50)),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='periods', to='academics.timetabletemplate')),
            ],
            options={
                'ordering': ['template', 'period_index'],
            },
        ),
        migrations.CreateModel(
            name='TimetableVersion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=50)),
                ('is_current', models.BooleanField(default=False)),
                ('rationale', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='versions', to='academics.timetableplan')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='timetableentry',
            name='version',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='entries', to='academics.timetableversion'),
        ),
        migrations.AddIndex(
            model_name='timetableentry',
            index=models.Index(fields=['version', 'day_of_week', 'klass', 'start_time'], name='academics_t_version_e7cd58_idx'),
        ),
        migrations.AddIndex(
            model_name='timetableentry',
            index=models.Index(fields=['version', 'day_of_week', 'teacher', 'start_time'], name='academics_t_version_ed9054_idx'),
        ),
        migrations.AddIndex(
            model_name='timetableentry',
            index=models.Index(fields=['version', 'day_of_week', 'room', 'start_time'], name='academics_t_version_59855e_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='timetableclassconfig',
            unique_together={('plan', 'klass')},
        ),
        migrations.AlterUniqueTogether(
            name='classsubjectquota',
            unique_together={('plan', 'klass', 'subject')},
        ),
        migrations.AlterUniqueTogether(
            name='timetabletemplate',
            unique_together={('school', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='timetableplan',
            unique_together={('school', 'term', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='periodslottemplate',
            unique_together={('template', 'period_index')},
        ),
        migrations.AlterUniqueTogether(
            name='timetableversion',
            unique_together={('plan', 'label')},
        ),
    ]
